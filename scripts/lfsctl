#!/usr/bin/env bash
# lfsctl - main CLI (final)
set -euo pipefail; IFS=$'\n\t'
SCRIPTS_DIR="${SCRIPTS_DIR:-/usr/bin}"
VERSION="lfsctl-1.0-20251020T213050Z"
cmd="${1:-help}"; shift || true
case "$cmd" in
  bootstrap|bs) sudo bash "$SCRIPTS_DIR/bootstrap.sh" "$@";;
  build|b) sudo bash "$SCRIPTS_DIR/build.sh" "$@";;
  install|i) sudo bash "$SCRIPTS_DIR/install.sh" "$@";;
  uninstall|u) sudo bash "$SCRIPTS_DIR/uninstall.sh" "$@";;
  update|up) sudo bash "$SCRIPTS_DIR/update.sh" "$@";;
  dependency|dep|d) sudo bash "$SCRIPTS_DIR/dependency.sh" "$@";;
  pipeline|pl) sudo bash "$SCRIPTS_DIR/lfsctl_pipeline.sh" "$@";;
  info) sudo bash -c "source $SCRIPTS_DIR/utils.sh; if [ -f "$1" ]; then parse_ini "$1"; for k in "${!META[@]}"; do echo "$k=${META[$k]}"; done; else meta=$(find "${META_ROOT:-$HOME/lfs-sandbox/meta}" -type f -name "$1.ini" | head -n1 || true); [ -n "$meta" ] && (parse_ini "$meta"; for k in "${!META[@]}"; do echo "$k=${META[$k]}"; done) || echo 'meta not found'; fi";;
  logs) sudo journalctl -u lfsctl.service --no-pager -n 200 || tail -n 200 /var/log/lfsctl/* || echo "no logs";;
  report|rep) sudo find /var/log/lfsctl -type f -name "build_report_*.json" -o -name "build_report_*.txt" -print;;
  --version|-v) echo "$VERSION";;
  help|*) cat <<'EOF'
lfsctl - LFS orchestration CLI
Commands: bootstrap(bs), build(b), install(i), uninstall(u), update(up), dependency(dep|d), pipeline(pl), info, logs, report(rep), --version
Examples:
  lfsctl bs --auto
  lfsctl b gcc --parallel --report
  lfsctl i gcc
EOF
;;
esac
