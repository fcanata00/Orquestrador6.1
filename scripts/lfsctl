#!/usr/bin/env bash
# lfsctl - main control CLI for LFS scripts
set -euo pipefail; IFS=$'\n\t'
SCRIPTS_DIR="${SCRIPTS_DIR:-/usr/bin}"
CMD="${1:-}"; shift || true
case "$CMD" in
  bootstrap|bs) sudo bash "$SCRIPTS_DIR/bootstrap.sh" "$@";;
  build|b) sudo bash "$SCRIPTS_DIR/build.sh" "$@";;
  install|i) 
    if [ -z "$1" ]; then echo "usage: lfsctl install <pkgname|path>"; exit 2; fi
    if [ -f "$1" ]; then sudo bash "$SCRIPTS_DIR/install.sh" "$1"; else sudo bash "$SCRIPTS_DIR/install.sh" "$1"; fi
    ;;
  uninstall|u) sudo bash "$SCRIPTS_DIR/uninstall.sh" "$@";;
  update|up) sudo bash "$SCRIPTS_DIR/update.sh" "$@";;
  deps|d) sudo bash "$SCRIPTS_DIR/dependency.sh" "$@";;
  pipeline)
    mode="${1:-bootstrap}"; shift || true
    case "$mode" in
      bootstrap) sudo bash "$SCRIPTS_DIR/bootstrap.sh" --auto "$@";;
      system) 
        # simple pipeline: bootstrap -> build all metas under META_ROOT/bootstrap -> install them
        sudo bash "$SCRIPTS_DIR/bootstrap.sh" --auto
        for meta in $(find "${META_ROOT:-$HOME/lfs-sandbox/meta/bootstrap}" -type f -name '*.ini' 2>/dev/null); do
          sudo bash "$SCRIPTS_DIR/build.sh" "$meta" || { echo "build failed for $meta"; exit 1; }
          sudo bash "$SCRIPTS_DIR/install.sh" "$meta" || { echo "install failed for $meta"; exit 1; }
        done
        ;;
      *) echo "Unknown pipeline mode: $mode"; exit 2;;
    esac
    ;;
  info) 
    if [ -z "$1" ]; then echo "Usage: lfsctl info <pkgname|meta.ini>"; exit 2; fi
    if [ -f "$1" ]; then bash -c "source $SCRIPTS_DIR/utils.sh; parse_ini '$1'; echo 'meta:'; for k in \"${!META[@]}\"; do echo \"$k=${META[$k]}\"; done"; else meta=$(find "${META_ROOT:-$HOME/lfs-sandbox/meta}" -type f -name \"$1.ini\" | head -n1 || true); if [ -n \"$meta\" ]; then bash -c "source $SCRIPTS_DIR/utils.sh; parse_ini '$meta'; echo 'meta:'; for k in \"${!META[@]}\"; do echo \"$k=${META[$k]}\"; done"; else echo "Meta for $1 not found"; fi; fi
    ;;
  logs) journalctl -u lfsctl.service --no-pager -n 200 || echo "No journal entries";;
  help|--help|-h|*) 
    cat <<EOF
lfsctl - control CLI for LFS scripts
Usage: lfsctl <command> [args]
Commands:
  bootstrap|bs          prepare /mnt/lfs (use --auto to build toolchain)
  build|b <pkg...>      build package(s) by meta or name
  install|i <pkg|file>  install package by name or archive path
  uninstall|u <pkg>     uninstall package (heuristic)
  update|up             check updates (calls update script)
  deps|d <pkg>          show dependencies
  pipeline <bootstrap|system>  run full pipeline
  info <pkg|meta.ini>   show metafile info
  logs                  show recent logs
EOF
    ;;
esac
