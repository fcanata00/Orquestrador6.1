# ==============================
# Metafile de exemplo completo
# Sistema: Orquestrador LFS
# Local: /usr/src/base/gcc/gcc.ini
# Descrição: receita de construção do GCC
# ==============================

# Identificação básica
name=gcc
version=14.2.0
category=base
description=The GNU Compiler Collection (C, C++, Fortran, Go, D, Ada, etc.)

# URLs principais de fontes (suporte a múltiplos sources)
sources=https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz,\
https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.1.tar.xz,\
https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz,\
https://ftp.gnu.org/gnu/mpc/mpc-1.3.1.tar.gz

# Somatórios SHA256 correspondentes (mesma ordem dos sources)
sha256sums=bf48f0f1ebef667db16d024055e294d9d89d7e99f1b582f5a5270b55f8c46bc9,\
aa5d62b5cf84e5c615aeb6efbafac9f8e55a2df244c6b6b0a8e5e12345678901,\
4e69d0ff90a3f40bbf54342fa49bce40a1aa3b889bdb6c98123456789abcdef,\
f95c6e5d7dcf5b0d62a76e7e5f1b2eaa7bbf7654321abcd1234567890abcdef

# Dependências (para depende.sh)
depends=glibc,binutils
build_deps=python3,perl
opt_deps=isl,gtk3
virtual_deps=compiler-libs # exemplo de dependência virtual

# Ambiente e variáveis de compilação (para build.sh)
environment=CC=gcc,CXX=g++,CFLAGS=-O2 -pipe -fPIC,LDFLAGS=-Wl,-rpath=/usr/lib
path_prepend=/usr/local/bin:/opt/toolchain/bin
configure_flags=--enable-languages=c,c++,fortran,go,d --disable-multilib --enable-bootstrap
make_flags=-j$(nproc)
install_flags=DESTDIR=$PKGDIR

# Patches (suporte múltiplo — aplicados em ordem)
patches=gcc-fix-configure.patch,gcc-asan-fix.patch

# Hooks (pré/pós etapas — scripts executáveis na pasta do programa)
hooks=pre-prepare.sh,post-configure.sh,pre-install.sh,post-install.sh,pre-uninstall.sh,post-uninstall.sh

# Diretório base de trabalho
workdir=/usr/src/base/gcc
builddir=/build/gcc
cachedir=/var/cache/orquestrador/sources

# API upstream (para update.sh)
api_url=https://gcc.gnu.org
api_regex="gcc-(\\d+\\.\\d+\\.\\d+)\\.tar\\.xz"
api_method=html
api_check_interval=168h # tempo entre verificações (update automático semanal)

# Controle de bootstrap (para bootstrap.sh)
bootstrap_stage=2
bootstrap_requires=binutils,glibc

# Metadados opcionais
maintainer=GNU Project
homepage=https://gcc.gnu.org/
license=GPL-3.0-or-later
architecture=x86_64
tags=compiler,toolchain,gnu,c++,c,base
priority=core
group=development

# Logs e cache
logdir=/var/log/orquestrador/builds/gcc
cache_bin=/var/cache/orquestrador/bin/gcc
cache_src=/var/cache/orquestrador/sources/gcc

# Testes
run_tests=true
test_target=check
test_flags=-k "sanity or compile"

# Instalação e empacotamento
install_prefix=/usr
destdir=/tmp/pkg-gcc
strip_binaries=true
compress_package=true
package_format=tar.zst

# Hooks de uninstall (executados por uninstall.sh)
uninstall_hooks=pre-uninstall.sh,post-uninstall.sh

# RootFS target (para build dentro do sandbox)
rootfs_target=/mnt/lfs/sandbox/gcc/rootfs

# Parâmetros adicionais customizados
extra_flags=--with-system-zlib,--enable-lto
notes=Este é um exemplo completo de metafile suportado por todos os módulos (build, depende, update, uninstall, bootstrap).
